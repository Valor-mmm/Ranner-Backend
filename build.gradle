/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */


plugins {
    id 'idea'
    id 'java'
    id 'war'
    id 'jacoco'
    id 'io.spring.dependency-management' version '1.0.1.RELEASE'
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom 'org.apache.logging.log4j:log4j-bom:2.11.1'
    }
}

dependencies {
    /* API: Graph QL */
    implementation 'com.graphql-java:graphql-java:9.0'

    /* Database: RavenDB */
    implementation 'net.ravendb:ravendb:4.1.1'

    /* Logging */
    implementation 'io.sentry:sentry-log4j2:1.7.5'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.1'

    /* Jackson */
    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.6'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.6'

    /* YAML Handling */
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformats-text:2.9.6'
    /* dataformats-yaml will be replaced some day by dataformats-text.
     * However this is currently needed for LOG4J to read the yaml config file
     */
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6'


    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.1.0'
    )
    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    )
}

sourceSets {
    main {
        java {
            srcDirs = ["src/java"]
        }
        resources {
            srcDirs = ["src/resources"]
        }
    }
    test {
        java {
            srcDirs = ["tests/java"]
        }
        resources {
            srcDirs = ["tests/resources"]
        }
    }
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled = true
        csv.enabled = false
        html.destination file("${buildDir}/jacoco/jacocoHtml")
        xml.destination file("${buildDir}/jacoco/jacocoXml")
    }
}


